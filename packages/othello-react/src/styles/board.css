/* ========================================
   BOARD STYLES - 8x8 Othello Game Board
   
   Structure:
   - .Board: Outer container with padding and shadow
   - .board-grid: CSS Grid (8x8) holding tiles
   - .Tile: Individual square (piece or empty)
   - .piece: Game piece (black or white circle)
   
   Responsive:
   - Desktop: 700-750px (85vh max)
   - Tablet: 650px (80vh max)
   - Mobile: 60-65vh
   ======================================== */

/**
 * Board Container
 * 
 * Fixed square aspect ratio (1:1)
 * Size controlled by CSS variable --board-max-size
 * Padding creates visual border around grid
 */
.Board {
  width: var(--board-max-size);
  height: var(--board-max-size);
  aspect-ratio: 1;  /* Always square */
  background: var(--color-board-bg);  /* Gradient background */
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);  /* Space between board edge and grid */
  box-shadow: var(--shadow-lg);  /* Elevated appearance */
}

/* 8x8 Grid Container */
.board-grid {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
  gap: 2px;
  background: rgba(0, 0, 0, 0.3);
  border-radius: var(--radius-md);
  overflow: hidden;
}

/* Individual Tile */
.Tile {
  background: var(--color-board-light);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all var(--transition-fast);
  position: relative;
}

/* Checkerboard pattern */
.Tile.dark {
  background: var(--color-board-dark);
}

.Tile.light {
  background: var(--color-board-light);
}

.Tile:hover {
  filter: brightness(1.1);
}

/* Valid move indicator */
.Tile.valid-move {
  background: rgba(76, 175, 80, 0.3);
  cursor: pointer;
}

.Tile.valid-move::after {
  content: '';
  width: 30%;
  height: 30%;
  border-radius: 50%;
  background: rgba(76, 175, 80, 0.4);
  border: 2px solid rgba(76, 175, 80, 0.6);
}

.Tile.valid-move:hover::after {
  background: rgba(76, 175, 80, 0.6);
  border-color: rgba(76, 175, 80, 0.8);
  transform: scale(1.2);
}

/* Last move highlight with glare effect */
.Tile.last-move {
  box-shadow: inset 0 0 0 3px var(--color-accent-blue);
  animation: pulse 0.5s ease-out;
  position: relative;
}

.Tile.last-move::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.4) 0%,
    rgba(255, 255, 255, 0.2) 30%,
    rgba(255, 255, 255, 0) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  pointer-events: none;
  opacity: 0;
  animation: glareEffect 0.8s ease-out 0.2s forwards;
}

@keyframes pulse {
  0%, 100% { box-shadow: inset 0 0 0 3px var(--color-accent-blue); }
  50% { box-shadow: inset 0 0 0 6px var(--color-accent-blue); }
}

@keyframes glareEffect {
  0% { opacity: 0; }
  30% { opacity: 1; }
  100% { opacity: 0.3; }
}

/* Game pieces */
.piece {
  width: 85%;
  height: 85%;
  border-radius: 50%;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.4),
              0 1px 3px rgba(0, 0, 0, 0.3);
  transition: transform var(--transition-normal),
              box-shadow var(--transition-normal);
  position: relative;
}

.piece.black {
  background: radial-gradient(circle at 30% 30%, #4a4a4a, #000000);
}

.piece.white {
  background: radial-gradient(circle at 30% 30%, #ffffff, #cccccc);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5),
              0 1px 3px rgba(0, 0, 0, 0.4),
              inset 0 -2px 4px rgba(0, 0, 0, 0.15);
}

/* Piece glare highlight - repeating shimmer effect */
.piece::after {
  content: '';
  position: absolute;
  top: 12%;
  left: 18%;
  width: 45%;
  height: 45%;
  background: radial-gradient(
    ellipse at 35% 35%,
    rgba(255, 255, 255, 0.8),
    rgba(255, 255, 255, 0.4) 40%,
    rgba(255, 255, 255, 0.1) 60%,
    transparent 75%
  );
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
  animation: glareShimmer 4s ease-in-out infinite;
}

.piece.black::after {
  opacity: 0.4;
}

.piece.white::after {
  opacity: 0.7;
}

/* Repeating glare shimmer for dramatic effect */
@keyframes glareShimmer {
  0%, 100% {
    opacity: inherit;
    transform: scale(1);
  }
  50% {
    opacity: calc(var(--glare-opacity, 0.4) * 1.5);
    transform: scale(1.1);
  }
}

.piece:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5),
              0 2px 6px rgba(0, 0, 0, 0.4);
}

.piece.white:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.6),
              0 2px 6px rgba(0, 0, 0, 0.5),
              inset 0 -2px 4px rgba(0, 0, 0, 0.2);
}

/* Flip animation - 180 degree rotation showing color transition */
.piece.flipping {
  animation: flip 0.5s cubic-bezier(0.4, 0.0, 0.2, 1);
  transform-style: preserve-3d;
}

@keyframes flip {
  0% { 
    transform: rotateY(0deg) scale(1);
  }
  50% { 
    transform: rotateY(90deg) scale(1.1);
    opacity: 0.8;
  }
  100% { 
    transform: rotateY(180deg) scale(1);
  }
}

/* ========== RESPONSIVE ========== */
@media (max-width: 768px) {
  .Board {
    padding: var(--spacing-md);
  }
  
  .board-grid {
    gap: 1px;
  }
  
  /* Larger tap targets on mobile */
  .Tile {
    min-height: 44px;
    min-width: 44px;
  }
  
  .piece {
    width: 80%;
    height: 80%;
  }
}

@media (max-width: 480px) {
  .Board {
    padding: var(--spacing-sm);
    border-radius: var(--radius-md);
  }
  
  .Tile.valid-move::after {
    width: 30%;
    height: 30%;
    border-width: 3px;
  }
  
  /* Even larger indicators for small screens */
  .Tile.last-move {
    box-shadow: inset 0 0 0 4px var(--color-accent-blue);
  }
}

/* Landscape mode on mobile */
@media (max-width: 768px) and (orientation: landscape) {
  .Board {
    --board-max-size: min(85vh, 500px);
  }
}
