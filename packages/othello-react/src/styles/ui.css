/* ========================================
   UI COMPONENTS - Supporting components
   Settings, Loading, Messages, etc.
   ======================================== */

/* ========== SETTINGS PANEL ========== */
.settings-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-modal);
  animation: fadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(6px);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    backdrop-filter: blur(0);
  }
  to {
    opacity: 1;
    backdrop-filter: blur(6px);
  }
}

/**
 * Settings Panel Container
 * 
 * IMPORTANT: Remove padding-top to let sticky header sit flush at top
 * Overflow is on the panel itself (not the content), so sticky positioning works
 */
.settings-panel {
  background: var(--color-bg-secondary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  padding: 0; /* Remove padding - header and content manage their own */
  max-width: 500px;
  width: 90%;
  max-height: 80vh;
  overflow-y: auto; /* Scroll container for sticky to work */
  box-shadow:
    0 20px 60px rgba(0, 0, 0, 0.7),
    0 10px 30px rgba(0, 0, 0, 0.5);
  animation: slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(40px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/**
 * Settings Header - Title + Close Button (STICKY!)
 * 
 * BRILLIANT UX: Header stays visible while scrolling
 * - User can always close the panel (close button always accessible)
 * - Title remains visible as context reminder
 * - Especially important as we add more settings in the future
 * 
 * Technical notes:
 * - position: sticky requires direct parent to be scroll container
 * - top: 0 sticks to top of scroll container (settings-panel)
 * - Background prevents content from showing through
 * - z-index ensures it stays above scrolling content
 */
.settings-header {
  position: sticky; /* THE MAGIC: Sticks to top while scrolling */
  top: 0; /* Stick to top edge */
  z-index: 10; /* Above scrolling content */
  background: var(--color-bg-secondary); /* Solid background (not transparent) */
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: var(--spacing-xl) var(--spacing-xl) var(--spacing-md); /* Add padding back */
  border-bottom: 2px solid rgba(255, 255, 255, 0.1);
  gap: var(--spacing-md);
  border-radius: var(--radius-lg) var(--radius-lg) 0 0; /* Round top corners */
}

.settings-header-content {
  flex: 1; /* Take up remaining space */
}

.settings-header h2 {
  color: var(--color-text-primary);
  margin: 0 0 8px 0;
  font-size: 28px;
}

/**
 * Settings Note - Yellow hint text
 * 
 * Provides helpful context to user
 * Color: Gold/yellow for visibility without being intrusive
 */
.settings-note {
  color: rgba(255, 215, 0, 0.8); /* Gold color for tips */
  font-size: 13px;
  margin: 0;
  text-align: left;
  font-style: italic;
  font-weight: 500;
}

/**
 * Close Button - Elegant Rotating X (from undo-redo)
 * 
 * BRILLIANT DESIGN DECISION: Transparent background
 * - Minimalist aesthetic
 * - Doesn't compete with settings content
 * - Hover state adds subtle feedback
 * 
 * Animation: Rotates 90Â° on hover
 * - Makes closing feel satisfying
 * - Visual cue that button is interactive
 * - Mimics physical mechanism (like closing a valve)
 */
.close-button {
  background: transparent; /* No background = cleaner look */
  border: none;
  color: var(--color-text-primary);
  font-size: 32px;
  cursor: pointer;
  padding: 0;
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 8px;
  transition: all 0.2s ease;
}

.close-button:hover {
  background: rgba(255, 255, 255, 0.1); /* Subtle highlight on hover */
  transform: rotate(90deg); /* THE MAGIC: Rotate on hover */
}

/**
 * Settings Content - Scrollable area
 * 
 * Add padding here (not on settings-panel) so content doesn't touch edges
 */
.settings-content {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  padding: var(--spacing-md) var(--spacing-xl) var(--spacing-xl); /* Padding inside scrollable area */
}

/**
 * Setting Item - Modular Card Layout (from undo-redo)
 * 
 * IMPROVED STRUCTURE (vs old horizontal layout):
 * Old: [Checkbox Label -------- Toggle]  (label/control compete for space)
 * New: [Checkbox Label]                   (clear hierarchy)
 *      [Description text below]
 * 
 * Benefits:
 * 1. More readable - title stands out
 * 2. Description has full width - no truncation
 * 3. Checkbox easier to click - larger target
 * 4. Scales better on mobile
 */
.setting-item {
  background: rgba(255, 255, 255, 0.05); /* Subtle card background */
  padding: var(--spacing-md);
  border-radius: var(--radius-md);
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.2s ease;
}

.setting-item:hover {
  background: rgba(255, 255, 255, 0.08); /* Slightly brighter on hover */
  border-color: rgba(255, 255, 255, 0.2);
}

/**
 * Setting Label - Checkbox + Title
 * 
 * Uses flexbox to align checkbox with text
 * Full-width clickable area for better UX
 */
.setting-label {
  display: flex;
  align-items: center;
  gap: 12px;
  cursor: pointer;
  font-size: 18px;
  font-weight: bold;
  color: var(--color-text-primary);
  margin-bottom: 8px; /* Space before description */
}

.setting-label input[type='checkbox'] {
  width: 24px;
  height: 24px;
  cursor: pointer;
  accent-color: #a88f67; /* Othello board color theme */
}

.setting-name {
  flex: 1;
}

/**
 * Setting Description - Explanatory Text
 * 
 * Positioned below title/checkbox for clear hierarchy
 * Indented to align with setting name (not checkbox)
 */
.setting-description {
  color: rgba(255, 255, 255, 0.6); /* Muted color = secondary info */
  font-size: 14px;
  margin: 0;
  margin-left: 36px; /* Indent to align with setting name */
  line-height: 1.5;
}

/* OLD TOGGLE STYLES REMOVED - Now using native checkbox */

/* ========== LOADING SCREEN ========== */
.loading-screen {
  position: fixed;
  inset: 0;
  background: var(--color-bg-primary);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: var(--z-loading);
  animation: fadeIn 0.3s ease-out;
}

.loading-spinner {
  width: 60px;
  height: 60px;
  border: 4px solid rgba(255, 255, 255, 0.1);
  border-top-color: var(--color-accent-green);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.loading-text {
  margin-top: var(--spacing-lg);
  color: var(--color-text-secondary);
  font-size: 16px;
}

/* ========== GAME MESSAGE ========== */
.game-message {
  padding: var(--spacing-md);
  text-align: center;
  font-weight: 600;
  border-radius: var(--radius-md);
  background: rgba(33, 150, 243, 0.1);
  border: 1px solid rgba(33, 150, 243, 0.3);
  color: var(--color-accent-blue);
  animation: fadeIn 0.3s ease-out;
}

.game-message.error {
  background: rgba(244, 67, 54, 0.1);
  border-color: rgba(244, 67, 54, 0.3);
  color: var(--color-accent-red);
}

.game-message.success {
  background: rgba(76, 175, 80, 0.1);
  border-color: rgba(76, 175, 80, 0.3);
  color: var(--color-accent-green);
}

/* ========== PLAYER INFO ========== */
.player-info {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.player-piece {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  box-shadow: var(--shadow-sm);
}

.player-piece.black {
  background: radial-gradient(circle at 30% 30%, #4a4a4a, #000000);
}

.player-piece.white {
  background: radial-gradient(circle at 30% 30%, #ffffff, #cccccc);
}

/* ========== SCORE BOX ========== */
.score-box {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  padding: var(--spacing-md);
  background: rgba(255, 255, 255, 0.05);
  border-radius: var(--radius-md);
}

.score-item {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.score-number {
  font-size: 20px;
  font-weight: bold;
  font-family: 'Courier New', monospace;
}

/* ========== PLAYER INFO CARD ========== */
/* Wrapper for hover trigger */
.player-info-trigger {
  position: relative;
  display: inline-block;
  cursor: help;
}

/* Hover card with player details */
.player-info-card {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  margin-top: var(--spacing-sm);
  background: var(--color-bg-secondary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  padding: var(--spacing-md);
  box-shadow: var(--shadow-lg);
  z-index: var(--z-modal);
  min-width: 200px;
  animation: slideUp 0.2s ease-out;
  pointer-events: none;
}

/* Player avatar circle */
.player-avatar {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto var(--spacing-md);
  font-size: 24px;
  font-weight: bold;
  color: white;
  box-shadow: var(--shadow-md);
}

.player-avatar.black {
  background: radial-gradient(circle at 30% 30%, #4a4a4a, #000000);
}

.player-avatar.white {
  background: radial-gradient(circle at 30% 30%, #ffffff, #cccccc);
  color: #000;
}

.avatar-initial {
  text-transform: uppercase;
}

/* Player details section */
.player-details {
  text-align: center;
}

.player-name {
  font-size: 16px;
  font-weight: 600;
  color: var(--color-text-primary);
  margin-bottom: var(--spacing-sm);
}

.player-stats {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.stat-item {
  display: flex;
  justify-content: space-between;
  font-size: 14px;
}

.stat-label {
  color: var(--color-text-secondary);
}

.stat-value {
  color: var(--color-text-primary);
  font-weight: 600;
  font-family: 'Courier New', monospace;
}

/* ========== ANIMATIONS ========== */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
